<div class="container">
  <div class="row">
    <div class="col-4">
      <%= form_with model: @post, url: posts_path do |f| %>
        <div class="form-group">
          <div class="col-form-label">●写真</div>
          <%= f.file_field "image/*" %>
        </div>
        <div class="form-group">
          <div class="col-form-label">●タイトル</div>
          <%= f.text_field :name %>
        </div>

        <div class="form-group">
          <div class="col-form-label">●投稿について</div>
          <%= f.text_area :introduction %>
        </div>

        <div class="form-group">
          <div class="col-form-label">●タグ</div>
          <%= f.text_area :tag %>
        </div>
        <div class="form-group">
          <div class="col-form-label">●駐車場</div>
          <%= f.radio_button :parking_number, 1 %>
          <%= f.label :parking_number_1, "あり" %>
          <%= f.radio_button :parking_number, 2 %>
          <%= f.label :parking_number_2, "なし" %>
          <%= f.radio_button :parking_number, 3 %>
          <%= f.label :parking_nomber_3, "その他" %>
          <div class="col-form-label">その他を選択した場合</div>
          <%= f.text_field :parking %>
        </div>

        <div class="form-group">
          <div class="col-form-label">●季節</div>
          <%= f.radio_button :season, Post.seasons.key(0) %>
          <%= f.label :season_spring, Post.seasons_i18n[:spring] %>
          <%= f.radio_button :season, Post.seasons.key(1) %>
          <%= f.label :season_summer, Post.seasons_i18n[:summer] %>
          <%= f.radio_button :season, Post.seasons.key(2) %>
          <%= f.label :season_autumm, Post.seasons_i18n[:autumm] %>
          <%= f.radio_button :season, Post.seasons.key(3) %>
          <%= f.label :season_winter, Post.seasons_i18n[:winter] %>
        </div>

        <div class="form-group">
          <div class="col-form-label">●交通手段</div>
          <%= f.radio_button :transportation, Post.transportations.key(0) %>
          <%= f.label :transportation_car, Post.transportations_i18n[:car] %>
          <%= f.radio_button :transportation, Post.transportations.key(1) %>
          <%= f.label :transportation_bike, Post.transportations_i18n[:bike] %>
          <%= f.radio_button :transportation, Post.transportations.key(2) %>
          <%= f.label :transportation_bicycle, Post.transportations_i18n[:bicycle] %>
          <%= f.radio_button :transportation, Post.transportations.key(3) %>
          <%= f.label :transportation_walking, Post.transportations_i18n[:walking] %>
        </div>
      <%end%>
    </div>
    
    <idv class="col-8">
      <input id="address" type="textbox" value="GeekSalon">
<input type="button" value="検索" onclick="codeAddress()">
<p>マーカーをドラック＆ドロップで位置の調整ができます。<p>
<div id='map'></div>

<style>
#map {
  height: 600px;
  width: 600px;
}
</style>

<script>
//初期マップの設定
let map
let marker
function initMap(){
  geocoder = new google.maps.Geocoder()

  map = new google.maps.Map(document.getElementById('map'), {
    center:  {lat: 35.6803997, lng:139.7690174},  //東京
    zoom: 15,
    
  });
}

//検索後のマップ作成
let geocoder
let aft
function codeAddress(){
  let inputAddress = document.getElementById('address').value;
  geocoder.geocode( { 'address': inputAddress}, function(results, status) {
    if (status == 'OK') {
        //マーカーが複数できないようにする
        if (aft == true){
            marker.setMap(null);
        }

        //新しくマーカーを作成する
        map.setCenter(results[0].geometry.location);
            marker = new google.maps.Marker({
            map: map,
            position: results[0].geometry.location,
            draggable: true	// ドラッグ可能にする
        });

        //二度目以降か判断
        aft = true

        //検索した時に緯度経度を入力する
        document.getElementById('lat').value = results[0].geometry.location.lat();
        document.getElementById('lng').value = results[0].geometry.location.lng();

        // マーカーのドロップ（ドラッグ終了）時のイベント
        google.maps.event.addListener( marker, 'dragend', function(ev){
            // イベントの引数evの、プロパティ.latLngが緯度経度
            document.getElementById('lat').value = ev.latLng.lat();
            document.getElementById('lng').value = ev.latLng.lng();
        });
    } else {
      alert('該当する結果がありませんでした：' + status);
    }
  });   
}

</script>
<script src="https://maps.googleapis.com/maps/api/js?AIzaSyDAFTm4C7rY9xYaVyt4MAi7Rs05F6BO38M&callback=initMap" async defer></script>
    </idv>
  </div>  
</div>

